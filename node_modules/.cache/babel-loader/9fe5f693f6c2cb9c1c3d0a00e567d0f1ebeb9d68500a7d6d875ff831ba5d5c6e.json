{"ast":null,"code":"/*! https://mths.be/regenerate v1.4.2 by @mathias | MIT license */\n;\n(function (root) {\n  // Detect free variables `exports`.\n  var freeExports = typeof exports == 'object' && exports;\n\n  // Detect free variable `module`.\n  var freeModule = typeof module == 'object' && module && module.exports == freeExports && module;\n\n  // Detect free variable `global`, from Node.js/io.js or Browserified code,\n  // and use it as `root`.\n  var freeGlobal = typeof global == 'object' && global;\n  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  var ERRORS = {\n    'rangeOrder': 'A range\\u2019s `stop` value must be greater than or equal ' + 'to the `start` value.',\n    'codePointRange': 'Invalid code point value. Code points range from ' + 'U+000000 to U+10FFFF.'\n  };\n\n  // https://mathiasbynens.be/notes/javascript-encoding#surrogate-pairs\n  var HIGH_SURROGATE_MIN = 0xD800;\n  var HIGH_SURROGATE_MAX = 0xDBFF;\n  var LOW_SURROGATE_MIN = 0xDC00;\n  var LOW_SURROGATE_MAX = 0xDFFF;\n\n  // In Regenerate output, `\\0` is never preceded by `\\` because we sort by\n  // code point value, so let’s keep this regular expression simple.\n  var regexNull = /\\\\x00([^0123456789]|$)/g;\n  var object = {};\n  var hasOwnProperty = object.hasOwnProperty;\n  var extend = function (destination, source) {\n    var key;\n    for (key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        destination[key] = source[key];\n      }\n    }\n    return destination;\n  };\n  var forEach = function (array, callback) {\n    var index = -1;\n    var length = array.length;\n    while (++index < length) {\n      callback(array[index], index);\n    }\n  };\n  var toString = object.toString;\n  var isArray = function (value) {\n    return toString.call(value) == '[object Array]';\n  };\n  var isNumber = function (value) {\n    return typeof value == 'number' || toString.call(value) == '[object Number]';\n  };\n\n  // This assumes that `number` is a positive integer that `toString()`s nicely\n  // (which is the case for all code point values).\n  var zeroes = '0000';\n  var pad = function (number, totalCharacters) {\n    var string = String(number);\n    return string.length < totalCharacters ? (zeroes + string).slice(-totalCharacters) : string;\n  };\n  var hex = function (number) {\n    return Number(number).toString(16).toUpperCase();\n  };\n  var slice = [].slice;\n\n  /*--------------------------------------------------------------------------*/\n\n  var dataFromCodePoints = function (codePoints) {\n    var index = -1;\n    var length = codePoints.length;\n    var max = length - 1;\n    var result = [];\n    var isStart = true;\n    var tmp;\n    var previous = 0;\n    while (++index < length) {\n      tmp = codePoints[index];\n      if (isStart) {\n        result.push(tmp);\n        previous = tmp;\n        isStart = false;\n      } else {\n        if (tmp == previous + 1) {\n          if (index != max) {\n            previous = tmp;\n            continue;\n          } else {\n            isStart = true;\n            result.push(tmp + 1);\n          }\n        } else {\n          // End the previous range and start a new one.\n          result.push(previous + 1, tmp);\n          previous = tmp;\n        }\n      }\n    }\n    if (!isStart) {\n      result.push(tmp + 1);\n    }\n    return result;\n  };\n  var dataRemove = function (data, codePoint) {\n    // Iterate over the data per `(start, end)` pair.\n    var index = 0;\n    var start;\n    var end;\n    var length = data.length;\n    while (index < length) {\n      start = data[index];\n      end = data[index + 1];\n      if (codePoint >= start && codePoint < end) {\n        // Modify this pair.\n        if (codePoint == start) {\n          if (end == start + 1) {\n            // Just remove `start` and `end`.\n            data.splice(index, 2);\n            return data;\n          } else {\n            // Just replace `start` with a new value.\n            data[index] = codePoint + 1;\n            return data;\n          }\n        } else if (codePoint == end - 1) {\n          // Just replace `end` with a new value.\n          data[index + 1] = codePoint;\n          return data;\n        } else {\n          // Replace `[start, end]` with `[startA, endA, startB, endB]`.\n          data.splice(index, 2, start, codePoint, codePoint + 1, end);\n          return data;\n        }\n      }\n      index += 2;\n    }\n    return data;\n  };\n  var dataRemoveRange = function (data, rangeStart, rangeEnd) {\n    if (rangeEnd < rangeStart) {\n      throw Error(ERRORS.rangeOrder);\n    }\n    // Iterate over the data per `(start, end)` pair.\n    var index = 0;\n    var start;\n    var end;\n    while (index < data.length) {\n      start = data[index];\n      end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n      // Exit as soon as no more matching pairs can be found.\n      if (start > rangeEnd) {\n        return data;\n      }\n\n      // Check if this range pair is equal to, or forms a subset of, the range\n      // to be removed.\n      // E.g. we have `[0, 11, 40, 51]` and want to remove 0-10 → `[40, 51]`.\n      // E.g. we have `[40, 51]` and want to remove 0-100 → `[]`.\n      if (rangeStart <= start && rangeEnd >= end) {\n        // Remove this pair.\n        data.splice(index, 2);\n        continue;\n      }\n\n      // Check if both `rangeStart` and `rangeEnd` are within the bounds of\n      // this pair.\n      // E.g. we have `[0, 11]` and want to remove 4-6 → `[0, 4, 7, 11]`.\n      if (rangeStart >= start && rangeEnd < end) {\n        if (rangeStart == start) {\n          // Replace `[start, end]` with `[startB, endB]`.\n          data[index] = rangeEnd + 1;\n          data[index + 1] = end + 1;\n          return data;\n        }\n        // Replace `[start, end]` with `[startA, endA, startB, endB]`.\n        data.splice(index, 2, start, rangeStart, rangeEnd + 1, end + 1);\n        return data;\n      }\n\n      // Check if only `rangeStart` is within the bounds of this pair.\n      // E.g. we have `[0, 11]` and want to remove 4-20 → `[0, 4]`.\n      if (rangeStart >= start && rangeStart <= end) {\n        // Replace `end` with `rangeStart`.\n        data[index + 1] = rangeStart;\n        // Note: we cannot `return` just yet, in case any following pairs still\n        // contain matching code points.\n        // E.g. we have `[0, 11, 14, 31]` and want to remove 4-20\n        // → `[0, 4, 21, 31]`.\n      }\n\n      // Check if only `rangeEnd` is within the bounds of this pair.\n      // E.g. we have `[14, 31]` and want to remove 4-20 → `[21, 31]`.\n      else if (rangeEnd >= start && rangeEnd <= end) {\n        // Just replace `start`.\n        data[index] = rangeEnd + 1;\n        return data;\n      }\n      index += 2;\n    }\n    return data;\n  };\n  var dataAdd = function (data, codePoint) {\n    // Iterate over the data per `(start, end)` pair.\n    var index = 0;\n    var start;\n    var end;\n    var lastIndex = null;\n    var length = data.length;\n    if (codePoint < 0x0 || codePoint > 0x10FFFF) {\n      throw RangeError(ERRORS.codePointRange);\n    }\n    while (index < length) {\n      start = data[index];\n      end = data[index + 1];\n\n      // Check if the code point is already in the set.\n      if (codePoint >= start && codePoint < end) {\n        return data;\n      }\n      if (codePoint == start - 1) {\n        // Just replace `start` with a new value.\n        data[index] = codePoint;\n        return data;\n      }\n\n      // At this point, if `start` is `greater` than `codePoint`, insert a new\n      // `[start, end]` pair before the current pair, or after the current pair\n      // if there is a known `lastIndex`.\n      if (start > codePoint) {\n        data.splice(lastIndex != null ? lastIndex + 2 : 0, 0, codePoint, codePoint + 1);\n        return data;\n      }\n      if (codePoint == end) {\n        // Check if adding this code point causes two separate ranges to become\n        // a single range, e.g. `dataAdd([0, 4, 5, 10], 4)` → `[0, 10]`.\n        if (codePoint + 1 == data[index + 2]) {\n          data.splice(index, 4, start, data[index + 3]);\n          return data;\n        }\n        // Else, just replace `end` with a new value.\n        data[index + 1] = codePoint + 1;\n        return data;\n      }\n      lastIndex = index;\n      index += 2;\n    }\n    // The loop has finished; add the new pair to the end of the data set.\n    data.push(codePoint, codePoint + 1);\n    return data;\n  };\n  var dataAddData = function (dataA, dataB) {\n    // Iterate over the data per `(start, end)` pair.\n    var index = 0;\n    var start;\n    var end;\n    var data = dataA.slice();\n    var length = dataB.length;\n    while (index < length) {\n      start = dataB[index];\n      end = dataB[index + 1] - 1;\n      if (start == end) {\n        data = dataAdd(data, start);\n      } else {\n        data = dataAddRange(data, start, end);\n      }\n      index += 2;\n    }\n    return data;\n  };\n  var dataRemoveData = function (dataA, dataB) {\n    // Iterate over the data per `(start, end)` pair.\n    var index = 0;\n    var start;\n    var end;\n    var data = dataA.slice();\n    var length = dataB.length;\n    while (index < length) {\n      start = dataB[index];\n      end = dataB[index + 1] - 1;\n      if (start == end) {\n        data = dataRemove(data, start);\n      } else {\n        data = dataRemoveRange(data, start, end);\n      }\n      index += 2;\n    }\n    return data;\n  };\n  var dataAddRange = function (data, rangeStart, rangeEnd) {\n    if (rangeEnd < rangeStart) {\n      throw Error(ERRORS.rangeOrder);\n    }\n    if (rangeStart < 0x0 || rangeStart > 0x10FFFF || rangeEnd < 0x0 || rangeEnd > 0x10FFFF) {\n      throw RangeError(ERRORS.codePointRange);\n    }\n    // Iterate over the data per `(start, end)` pair.\n    var index = 0;\n    var start;\n    var end;\n    var added = false;\n    var length = data.length;\n    while (index < length) {\n      start = data[index];\n      end = data[index + 1];\n      if (added) {\n        // The range has already been added to the set; at this point, we just\n        // need to get rid of the following ranges in case they overlap.\n\n        // Check if this range can be combined with the previous range.\n        if (start == rangeEnd + 1) {\n          data.splice(index - 1, 2);\n          return data;\n        }\n\n        // Exit as soon as no more possibly overlapping pairs can be found.\n        if (start > rangeEnd) {\n          return data;\n        }\n\n        // E.g. `[0, 11, 12, 16]` and we’ve added 5-15, so we now have\n        // `[0, 16, 12, 16]`. Remove the `12,16` part, as it lies within the\n        // `0,16` range that was previously added.\n        if (start >= rangeStart && start <= rangeEnd) {\n          // `start` lies within the range that was previously added.\n\n          if (end > rangeStart && end - 1 <= rangeEnd) {\n            // `end` lies within the range that was previously added as well,\n            // so remove this pair.\n            data.splice(index, 2);\n            index -= 2;\n            // Note: we cannot `return` just yet, as there may still be other\n            // overlapping pairs.\n          } else {\n            // `start` lies within the range that was previously added, but\n            // `end` doesn’t. E.g. `[0, 11, 12, 31]` and we’ve added 5-15, so\n            // now we have `[0, 16, 12, 31]`. This must be written as `[0, 31]`.\n            // Remove the previously added `end` and the current `start`.\n            data.splice(index - 1, 2);\n            index -= 2;\n          }\n\n          // Note: we cannot return yet.\n        }\n      } else if (start == rangeEnd + 1 || start == rangeEnd) {\n        data[index] = rangeStart;\n        return data;\n      }\n\n      // Check if a new pair must be inserted *before* the current one.\n      else if (start > rangeEnd) {\n        data.splice(index, 0, rangeStart, rangeEnd + 1);\n        return data;\n      } else if (rangeStart >= start && rangeStart < end && rangeEnd + 1 <= end) {\n        // The new range lies entirely within an existing range pair. No action\n        // needed.\n        return data;\n      } else if (\n      // E.g. `[0, 11]` and you add 5-15 → `[0, 16]`.\n      rangeStart >= start && rangeStart < end ||\n      // E.g. `[0, 3]` and you add 3-6 → `[0, 7]`.\n      end == rangeStart) {\n        // Replace `end` with the new value.\n        data[index + 1] = rangeEnd + 1;\n        // Make sure the next range pair doesn’t overlap, e.g. `[0, 11, 12, 14]`\n        // and you add 5-15 → `[0, 16]`, i.e. remove the `12,14` part.\n        added = true;\n        // Note: we cannot `return` just yet.\n      } else if (rangeStart <= start && rangeEnd + 1 >= end) {\n        // The new range is a superset of the old range.\n        data[index] = rangeStart;\n        data[index + 1] = rangeEnd + 1;\n        added = true;\n      }\n      index += 2;\n    }\n    // The loop has finished without doing anything; add the new pair to the end\n    // of the data set.\n    if (!added) {\n      data.push(rangeStart, rangeEnd + 1);\n    }\n    return data;\n  };\n  var dataContains = function (data, codePoint) {\n    var index = 0;\n    var length = data.length;\n    // Exit early if `codePoint` is not within `data`’s overall range.\n    var start = data[index];\n    var end = data[length - 1];\n    if (length >= 2) {\n      if (codePoint < start || codePoint > end) {\n        return false;\n      }\n    }\n    // Iterate over the data per `(start, end)` pair.\n    while (index < length) {\n      start = data[index];\n      end = data[index + 1];\n      if (codePoint >= start && codePoint < end) {\n        return true;\n      }\n      index += 2;\n    }\n    return false;\n  };\n  var dataIntersection = function (data, codePoints) {\n    var index = 0;\n    var length = codePoints.length;\n    var codePoint;\n    var result = [];\n    while (index < length) {\n      codePoint = codePoints[index];\n      if (dataContains(data, codePoint)) {\n        result.push(codePoint);\n      }\n      ++index;\n    }\n    return dataFromCodePoints(result);\n  };\n  var dataIsEmpty = function (data) {\n    return !data.length;\n  };\n  var dataIsSingleton = function (data) {\n    // Check if the set only represents a single code point.\n    return data.length == 2 && data[0] + 1 == data[1];\n  };\n  var dataToArray = function (data) {\n    // Iterate over the data per `(start, end)` pair.\n    var index = 0;\n    var start;\n    var end;\n    var result = [];\n    var length = data.length;\n    while (index < length) {\n      start = data[index];\n      end = data[index + 1];\n      while (start < end) {\n        result.push(start);\n        ++start;\n      }\n      index += 2;\n    }\n    return result;\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n  var floor = Math.floor;\n  var highSurrogate = function (codePoint) {\n    return parseInt(floor((codePoint - 0x10000) / 0x400) + HIGH_SURROGATE_MIN, 10);\n  };\n  var lowSurrogate = function (codePoint) {\n    return parseInt((codePoint - 0x10000) % 0x400 + LOW_SURROGATE_MIN, 10);\n  };\n  var stringFromCharCode = String.fromCharCode;\n  var codePointToString = function (codePoint) {\n    var string;\n    // https://mathiasbynens.be/notes/javascript-escapes#single\n    // Note: the `\\b` escape sequence for U+0008 BACKSPACE in strings has a\n    // different meaning in regular expressions (word boundary), so it cannot\n    // be used here.\n    if (codePoint == 0x09) {\n      string = '\\\\t';\n    }\n    // Note: IE < 9 treats `'\\v'` as `'v'`, so avoid using it.\n    // else if (codePoint == 0x0B) {\n    // \tstring = '\\\\v';\n    // }\n    else if (codePoint == 0x0A) {\n      string = '\\\\n';\n    } else if (codePoint == 0x0C) {\n      string = '\\\\f';\n    } else if (codePoint == 0x0D) {\n      string = '\\\\r';\n    } else if (codePoint == 0x2D) {\n      // https://mathiasbynens.be/notes/javascript-escapes#hexadecimal\n      // Note: `-` (U+002D HYPHEN-MINUS) is escaped in this way rather\n      // than by backslash-escaping, in case the output is used outside\n      // of a character class in a `u` RegExp. /\\-/u throws, but\n      // /\\x2D/u is fine.\n      string = '\\\\x2D';\n    } else if (codePoint == 0x5C) {\n      string = '\\\\\\\\';\n    } else if (codePoint == 0x24 || codePoint >= 0x28 && codePoint <= 0x2B || codePoint == 0x2E || codePoint == 0x2F || codePoint == 0x3F || codePoint >= 0x5B && codePoint <= 0x5E || codePoint >= 0x7B && codePoint <= 0x7D) {\n      // The code point maps to an unsafe printable ASCII character;\n      // backslash-escape it. Here’s the list of those symbols:\n      //\n      //     $()*+./?[\\]^{|}\n      //\n      // This matches SyntaxCharacters as well as `/` (U+002F SOLIDUS).\n      // https://tc39.github.io/ecma262/#prod-SyntaxCharacter\n      string = '\\\\' + stringFromCharCode(codePoint);\n    } else if (codePoint >= 0x20 && codePoint <= 0x7E) {\n      // The code point maps to one of these printable ASCII symbols\n      // (including the space character):\n      //\n      //      !\"#%&',/0123456789:;<=>@ABCDEFGHIJKLMNO\n      //     PQRSTUVWXYZ_`abcdefghijklmnopqrstuvwxyz~\n      //\n      // These can safely be used directly.\n      string = stringFromCharCode(codePoint);\n    } else if (codePoint <= 0xFF) {\n      string = '\\\\x' + pad(hex(codePoint), 2);\n    } else {\n      // `codePoint <= 0xFFFF` holds true.\n      // https://mathiasbynens.be/notes/javascript-escapes#unicode\n      string = '\\\\u' + pad(hex(codePoint), 4);\n    }\n\n    // There’s no need to account for astral symbols / surrogate pairs here,\n    // since `codePointToString` is private and only used for BMP code points.\n    // But if that’s what you need, just add an `else` block with this code:\n    //\n    //     string = '\\\\u' + pad(hex(highSurrogate(codePoint)), 4)\n    //     \t+ '\\\\u' + pad(hex(lowSurrogate(codePoint)), 4);\n\n    return string;\n  };\n  var codePointToStringUnicode = function (codePoint) {\n    if (codePoint <= 0xFFFF) {\n      return codePointToString(codePoint);\n    }\n    return '\\\\u{' + codePoint.toString(16).toUpperCase() + '}';\n  };\n  var symbolToCodePoint = function (symbol) {\n    var length = symbol.length;\n    var first = symbol.charCodeAt(0);\n    var second;\n    if (first >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX && length > 1 // There is a next code unit.\n    ) {\n      // `first` is a high surrogate, and there is a next character. Assume\n      // it’s a low surrogate (else it’s invalid usage of Regenerate anyway).\n      second = symbol.charCodeAt(1);\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - HIGH_SURROGATE_MIN) * 0x400 + second - LOW_SURROGATE_MIN + 0x10000;\n    }\n    return first;\n  };\n  var createBMPCharacterClasses = function (data) {\n    // Iterate over the data per `(start, end)` pair.\n    var result = '';\n    var index = 0;\n    var start;\n    var end;\n    var length = data.length;\n    if (dataIsSingleton(data)) {\n      return codePointToString(data[0]);\n    }\n    while (index < length) {\n      start = data[index];\n      end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n      if (start == end) {\n        result += codePointToString(start);\n      } else if (start + 1 == end) {\n        result += codePointToString(start) + codePointToString(end);\n      } else {\n        result += codePointToString(start) + '-' + codePointToString(end);\n      }\n      index += 2;\n    }\n    return '[' + result + ']';\n  };\n  var createUnicodeCharacterClasses = function (data) {\n    // Iterate over the data per `(start, end)` pair.\n    var result = '';\n    var index = 0;\n    var start;\n    var end;\n    var length = data.length;\n    if (dataIsSingleton(data)) {\n      return codePointToStringUnicode(data[0]);\n    }\n    while (index < length) {\n      start = data[index];\n      end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n      if (start == end) {\n        result += codePointToStringUnicode(start);\n      } else if (start + 1 == end) {\n        result += codePointToStringUnicode(start) + codePointToStringUnicode(end);\n      } else {\n        result += codePointToStringUnicode(start) + '-' + codePointToStringUnicode(end);\n      }\n      index += 2;\n    }\n    return '[' + result + ']';\n  };\n  var splitAtBMP = function (data) {\n    // Iterate over the data per `(start, end)` pair.\n    var loneHighSurrogates = [];\n    var loneLowSurrogates = [];\n    var bmp = [];\n    var astral = [];\n    var index = 0;\n    var start;\n    var end;\n    var length = data.length;\n    while (index < length) {\n      start = data[index];\n      end = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n      if (start < HIGH_SURROGATE_MIN) {\n        // The range starts and ends before the high surrogate range.\n        // E.g. (0, 0x10).\n        if (end < HIGH_SURROGATE_MIN) {\n          bmp.push(start, end + 1);\n        }\n\n        // The range starts before the high surrogate range and ends within it.\n        // E.g. (0, 0xD855).\n        if (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {\n          bmp.push(start, HIGH_SURROGATE_MIN);\n          loneHighSurrogates.push(HIGH_SURROGATE_MIN, end + 1);\n        }\n\n        // The range starts before the high surrogate range and ends in the low\n        // surrogate range. E.g. (0, 0xDCFF).\n        if (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n          bmp.push(start, HIGH_SURROGATE_MIN);\n          loneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n          loneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);\n        }\n\n        // The range starts before the high surrogate range and ends after the\n        // low surrogate range. E.g. (0, 0x10FFFF).\n        if (end > LOW_SURROGATE_MAX) {\n          bmp.push(start, HIGH_SURROGATE_MIN);\n          loneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n          loneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);\n          if (end <= 0xFFFF) {\n            bmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n          } else {\n            bmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n            astral.push(0xFFFF + 1, end + 1);\n          }\n        }\n      } else if (start >= HIGH_SURROGATE_MIN && start <= HIGH_SURROGATE_MAX) {\n        // The range starts and ends in the high surrogate range.\n        // E.g. (0xD855, 0xD866).\n        if (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {\n          loneHighSurrogates.push(start, end + 1);\n        }\n\n        // The range starts in the high surrogate range and ends in the low\n        // surrogate range. E.g. (0xD855, 0xDCFF).\n        if (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n          loneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n          loneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);\n        }\n\n        // The range starts in the high surrogate range and ends after the low\n        // surrogate range. E.g. (0xD855, 0x10FFFF).\n        if (end > LOW_SURROGATE_MAX) {\n          loneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n          loneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);\n          if (end <= 0xFFFF) {\n            bmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n          } else {\n            bmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n            astral.push(0xFFFF + 1, end + 1);\n          }\n        }\n      } else if (start >= LOW_SURROGATE_MIN && start <= LOW_SURROGATE_MAX) {\n        // The range starts and ends in the low surrogate range.\n        // E.g. (0xDCFF, 0xDDFF).\n        if (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n          loneLowSurrogates.push(start, end + 1);\n        }\n\n        // The range starts in the low surrogate range and ends after the low\n        // surrogate range. E.g. (0xDCFF, 0x10FFFF).\n        if (end > LOW_SURROGATE_MAX) {\n          loneLowSurrogates.push(start, LOW_SURROGATE_MAX + 1);\n          if (end <= 0xFFFF) {\n            bmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n          } else {\n            bmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n            astral.push(0xFFFF + 1, end + 1);\n          }\n        }\n      } else if (start > LOW_SURROGATE_MAX && start <= 0xFFFF) {\n        // The range starts and ends after the low surrogate range.\n        // E.g. (0xFFAA, 0x10FFFF).\n        if (end <= 0xFFFF) {\n          bmp.push(start, end + 1);\n        } else {\n          bmp.push(start, 0xFFFF + 1);\n          astral.push(0xFFFF + 1, end + 1);\n        }\n      } else {\n        // The range starts and ends in the astral range.\n        astral.push(start, end + 1);\n      }\n      index += 2;\n    }\n    return {\n      'loneHighSurrogates': loneHighSurrogates,\n      'loneLowSurrogates': loneLowSurrogates,\n      'bmp': bmp,\n      'astral': astral\n    };\n  };\n  var optimizeSurrogateMappings = function (surrogateMappings) {\n    var result = [];\n    var tmpLow = [];\n    var addLow = false;\n    var mapping;\n    var nextMapping;\n    var highSurrogates;\n    var lowSurrogates;\n    var nextHighSurrogates;\n    var nextLowSurrogates;\n    var index = -1;\n    var length = surrogateMappings.length;\n    while (++index < length) {\n      mapping = surrogateMappings[index];\n      nextMapping = surrogateMappings[index + 1];\n      if (!nextMapping) {\n        result.push(mapping);\n        continue;\n      }\n      highSurrogates = mapping[0];\n      lowSurrogates = mapping[1];\n      nextHighSurrogates = nextMapping[0];\n      nextLowSurrogates = nextMapping[1];\n\n      // Check for identical high surrogate ranges.\n      tmpLow = lowSurrogates;\n      while (nextHighSurrogates && highSurrogates[0] == nextHighSurrogates[0] && highSurrogates[1] == nextHighSurrogates[1]) {\n        // Merge with the next item.\n        if (dataIsSingleton(nextLowSurrogates)) {\n          tmpLow = dataAdd(tmpLow, nextLowSurrogates[0]);\n        } else {\n          tmpLow = dataAddRange(tmpLow, nextLowSurrogates[0], nextLowSurrogates[1] - 1);\n        }\n        ++index;\n        mapping = surrogateMappings[index];\n        highSurrogates = mapping[0];\n        lowSurrogates = mapping[1];\n        nextMapping = surrogateMappings[index + 1];\n        nextHighSurrogates = nextMapping && nextMapping[0];\n        nextLowSurrogates = nextMapping && nextMapping[1];\n        addLow = true;\n      }\n      result.push([highSurrogates, addLow ? tmpLow : lowSurrogates]);\n      addLow = false;\n    }\n    return optimizeByLowSurrogates(result);\n  };\n  var optimizeByLowSurrogates = function (surrogateMappings) {\n    if (surrogateMappings.length == 1) {\n      return surrogateMappings;\n    }\n    var index = -1;\n    var innerIndex = -1;\n    while (++index < surrogateMappings.length) {\n      var mapping = surrogateMappings[index];\n      var lowSurrogates = mapping[1];\n      var lowSurrogateStart = lowSurrogates[0];\n      var lowSurrogateEnd = lowSurrogates[1];\n      innerIndex = index; // Note: the loop starts at the next index.\n      while (++innerIndex < surrogateMappings.length) {\n        var otherMapping = surrogateMappings[innerIndex];\n        var otherLowSurrogates = otherMapping[1];\n        var otherLowSurrogateStart = otherLowSurrogates[0];\n        var otherLowSurrogateEnd = otherLowSurrogates[1];\n        if (lowSurrogateStart == otherLowSurrogateStart && lowSurrogateEnd == otherLowSurrogateEnd && otherLowSurrogates.length === 2) {\n          // Add the code points in the other item to this one.\n          if (dataIsSingleton(otherMapping[0])) {\n            mapping[0] = dataAdd(mapping[0], otherMapping[0][0]);\n          } else {\n            mapping[0] = dataAddRange(mapping[0], otherMapping[0][0], otherMapping[0][1] - 1);\n          }\n          // Remove the other, now redundant, item.\n          surrogateMappings.splice(innerIndex, 1);\n          --innerIndex;\n        }\n      }\n    }\n    return surrogateMappings;\n  };\n  var surrogateSet = function (data) {\n    // Exit early if `data` is an empty set.\n    if (!data.length) {\n      return [];\n    }\n\n    // Iterate over the data per `(start, end)` pair.\n    var index = 0;\n    var start;\n    var end;\n    var startHigh;\n    var startLow;\n    var endHigh;\n    var endLow;\n    var surrogateMappings = [];\n    var length = data.length;\n    while (index < length) {\n      start = data[index];\n      end = data[index + 1] - 1;\n      startHigh = highSurrogate(start);\n      startLow = lowSurrogate(start);\n      endHigh = highSurrogate(end);\n      endLow = lowSurrogate(end);\n      var startsWithLowestLowSurrogate = startLow == LOW_SURROGATE_MIN;\n      var endsWithHighestLowSurrogate = endLow == LOW_SURROGATE_MAX;\n      var complete = false;\n\n      // Append the previous high-surrogate-to-low-surrogate mappings.\n      // Step 1: `(startHigh, startLow)` to `(startHigh, LOW_SURROGATE_MAX)`.\n      if (startHigh == endHigh || startsWithLowestLowSurrogate && endsWithHighestLowSurrogate) {\n        surrogateMappings.push([[startHigh, endHigh + 1], [startLow, endLow + 1]]);\n        complete = true;\n      } else {\n        surrogateMappings.push([[startHigh, startHigh + 1], [startLow, LOW_SURROGATE_MAX + 1]]);\n      }\n\n      // Step 2: `(startHigh + 1, LOW_SURROGATE_MIN)` to\n      // `(endHigh - 1, LOW_SURROGATE_MAX)`.\n      if (!complete && startHigh + 1 < endHigh) {\n        if (endsWithHighestLowSurrogate) {\n          // Combine step 2 and step 3.\n          surrogateMappings.push([[startHigh + 1, endHigh + 1], [LOW_SURROGATE_MIN, endLow + 1]]);\n          complete = true;\n        } else {\n          surrogateMappings.push([[startHigh + 1, endHigh], [LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1]]);\n        }\n      }\n\n      // Step 3. `(endHigh, LOW_SURROGATE_MIN)` to `(endHigh, endLow)`.\n      if (!complete) {\n        surrogateMappings.push([[endHigh, endHigh + 1], [LOW_SURROGATE_MIN, endLow + 1]]);\n      }\n      index += 2;\n    }\n\n    // The format of `surrogateMappings` is as follows:\n    //\n    //     [ surrogateMapping1, surrogateMapping2 ]\n    //\n    // i.e.:\n    //\n    //     [\n    //       [ highSurrogates1, lowSurrogates1 ],\n    //       [ highSurrogates2, lowSurrogates2 ]\n    //     ]\n    return optimizeSurrogateMappings(surrogateMappings);\n  };\n  var createSurrogateCharacterClasses = function (surrogateMappings) {\n    var result = [];\n    forEach(surrogateMappings, function (surrogateMapping) {\n      var highSurrogates = surrogateMapping[0];\n      var lowSurrogates = surrogateMapping[1];\n      result.push(createBMPCharacterClasses(highSurrogates) + createBMPCharacterClasses(lowSurrogates));\n    });\n    return result.join('|');\n  };\n  var createCharacterClassesFromData = function (data, bmpOnly, hasUnicodeFlag) {\n    if (hasUnicodeFlag) {\n      return createUnicodeCharacterClasses(data);\n    }\n    var result = [];\n    var parts = splitAtBMP(data);\n    var loneHighSurrogates = parts.loneHighSurrogates;\n    var loneLowSurrogates = parts.loneLowSurrogates;\n    var bmp = parts.bmp;\n    var astral = parts.astral;\n    var hasLoneHighSurrogates = !dataIsEmpty(loneHighSurrogates);\n    var hasLoneLowSurrogates = !dataIsEmpty(loneLowSurrogates);\n    var surrogateMappings = surrogateSet(astral);\n    if (bmpOnly) {\n      bmp = dataAddData(bmp, loneHighSurrogates);\n      hasLoneHighSurrogates = false;\n      bmp = dataAddData(bmp, loneLowSurrogates);\n      hasLoneLowSurrogates = false;\n    }\n    if (!dataIsEmpty(bmp)) {\n      // The data set contains BMP code points that are not high surrogates\n      // needed for astral code points in the set.\n      result.push(createBMPCharacterClasses(bmp));\n    }\n    if (surrogateMappings.length) {\n      // The data set contains astral code points; append character classes\n      // based on their surrogate pairs.\n      result.push(createSurrogateCharacterClasses(surrogateMappings));\n    }\n    // https://gist.github.com/mathiasbynens/bbe7f870208abcfec860\n    if (hasLoneHighSurrogates) {\n      result.push(createBMPCharacterClasses(loneHighSurrogates) +\n      // Make sure the high surrogates aren’t part of a surrogate pair.\n      '(?![\\\\uDC00-\\\\uDFFF])');\n    }\n    if (hasLoneLowSurrogates) {\n      result.push(\n      // It is not possible to accurately assert the low surrogates aren’t\n      // part of a surrogate pair, since JavaScript regular expressions do\n      // not support lookbehind.\n      '(?:[^\\\\uD800-\\\\uDBFF]|^)' + createBMPCharacterClasses(loneLowSurrogates));\n    }\n    return result.join('|');\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  // `regenerate` can be used as a constructor (and new methods can be added to\n  // its prototype) but also as a regular function, the latter of which is the\n  // documented and most common usage. For that reason, it’s not capitalized.\n  var regenerate = function (value) {\n    if (arguments.length > 1) {\n      value = slice.call(arguments);\n    }\n    if (this instanceof regenerate) {\n      this.data = [];\n      return value ? this.add(value) : this;\n    }\n    return new regenerate().add(value);\n  };\n  regenerate.version = '1.4.2';\n  var proto = regenerate.prototype;\n  extend(proto, {\n    'add': function (value) {\n      var $this = this;\n      if (value == null) {\n        return $this;\n      }\n      if (value instanceof regenerate) {\n        // Allow passing other Regenerate instances.\n        $this.data = dataAddData($this.data, value.data);\n        return $this;\n      }\n      if (arguments.length > 1) {\n        value = slice.call(arguments);\n      }\n      if (isArray(value)) {\n        forEach(value, function (item) {\n          $this.add(item);\n        });\n        return $this;\n      }\n      $this.data = dataAdd($this.data, isNumber(value) ? value : symbolToCodePoint(value));\n      return $this;\n    },\n    'remove': function (value) {\n      var $this = this;\n      if (value == null) {\n        return $this;\n      }\n      if (value instanceof regenerate) {\n        // Allow passing other Regenerate instances.\n        $this.data = dataRemoveData($this.data, value.data);\n        return $this;\n      }\n      if (arguments.length > 1) {\n        value = slice.call(arguments);\n      }\n      if (isArray(value)) {\n        forEach(value, function (item) {\n          $this.remove(item);\n        });\n        return $this;\n      }\n      $this.data = dataRemove($this.data, isNumber(value) ? value : symbolToCodePoint(value));\n      return $this;\n    },\n    'addRange': function (start, end) {\n      var $this = this;\n      $this.data = dataAddRange($this.data, isNumber(start) ? start : symbolToCodePoint(start), isNumber(end) ? end : symbolToCodePoint(end));\n      return $this;\n    },\n    'removeRange': function (start, end) {\n      var $this = this;\n      var startCodePoint = isNumber(start) ? start : symbolToCodePoint(start);\n      var endCodePoint = isNumber(end) ? end : symbolToCodePoint(end);\n      $this.data = dataRemoveRange($this.data, startCodePoint, endCodePoint);\n      return $this;\n    },\n    'intersection': function (argument) {\n      var $this = this;\n      // Allow passing other Regenerate instances.\n      // TODO: Optimize this by writing and using `dataIntersectionData()`.\n      var array = argument instanceof regenerate ? dataToArray(argument.data) : argument;\n      $this.data = dataIntersection($this.data, array);\n      return $this;\n    },\n    'contains': function (codePoint) {\n      return dataContains(this.data, isNumber(codePoint) ? codePoint : symbolToCodePoint(codePoint));\n    },\n    'clone': function () {\n      var set = new regenerate();\n      set.data = this.data.slice(0);\n      return set;\n    },\n    'toString': function (options) {\n      var result = createCharacterClassesFromData(this.data, options ? options.bmpOnly : false, options ? options.hasUnicodeFlag : false);\n      if (!result) {\n        // For an empty set, return something that can be inserted `/here/` to\n        // form a valid regular expression. Avoid `(?:)` since that matches the\n        // empty string.\n        return '[]';\n      }\n      // Use `\\0` instead of `\\x00` where possible.\n      return result.replace(regexNull, '\\\\0$1');\n    },\n    'toRegExp': function (flags) {\n      var pattern = this.toString(flags && flags.indexOf('u') != -1 ? {\n        'hasUnicodeFlag': true\n      } : null);\n      return RegExp(pattern, flags || '');\n    },\n    'valueOf': function () {\n      // Note: `valueOf` is aliased as `toArray`.\n      return dataToArray(this.data);\n    }\n  });\n  proto.toArray = proto.valueOf;\n\n  // Some AMD build optimizers, like r.js, check for specific condition patterns\n  // like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    define(function () {\n      return regenerate;\n    });\n  } else if (freeExports && !freeExports.nodeType) {\n    if (freeModule) {\n      // in Node.js, io.js, or RingoJS v0.8.0+\n      freeModule.exports = regenerate;\n    } else {\n      // in Narwhal or RingoJS v0.7.0-\n      freeExports.regenerate = regenerate;\n    }\n  } else {\n    // in Rhino or a web browser\n    root.regenerate = regenerate;\n  }\n})(this);","map":{"version":3,"names":["root","freeExports","exports","freeModule","module","freeGlobal","global","window","ERRORS","HIGH_SURROGATE_MIN","HIGH_SURROGATE_MAX","LOW_SURROGATE_MIN","LOW_SURROGATE_MAX","regexNull","object","hasOwnProperty","extend","destination","source","key","call","forEach","array","callback","index","length","toString","isArray","value","isNumber","zeroes","pad","number","totalCharacters","string","String","slice","hex","Number","toUpperCase","dataFromCodePoints","codePoints","max","result","isStart","tmp","previous","push","dataRemove","data","codePoint","start","end","splice","dataRemoveRange","rangeStart","rangeEnd","Error","rangeOrder","dataAdd","lastIndex","RangeError","codePointRange","dataAddData","dataA","dataB","dataAddRange","dataRemoveData","added","dataContains","dataIntersection","dataIsEmpty","dataIsSingleton","dataToArray","floor","Math","highSurrogate","parseInt","lowSurrogate","stringFromCharCode","fromCharCode","codePointToString","codePointToStringUnicode","symbolToCodePoint","symbol","first","charCodeAt","second","createBMPCharacterClasses","createUnicodeCharacterClasses","splitAtBMP","loneHighSurrogates","loneLowSurrogates","bmp","astral","optimizeSurrogateMappings","surrogateMappings","tmpLow","addLow","mapping","nextMapping","highSurrogates","lowSurrogates","nextHighSurrogates","nextLowSurrogates","optimizeByLowSurrogates","innerIndex","lowSurrogateStart","lowSurrogateEnd","otherMapping","otherLowSurrogates","otherLowSurrogateStart","otherLowSurrogateEnd","surrogateSet","startHigh","startLow","endHigh","endLow","startsWithLowestLowSurrogate","endsWithHighestLowSurrogate","complete","createSurrogateCharacterClasses","surrogateMapping","join","createCharacterClassesFromData","bmpOnly","hasUnicodeFlag","parts","hasLoneHighSurrogates","hasLoneLowSurrogates","regenerate","arguments","add","version","proto","prototype","$this","item","remove","addRange","removeRange","startCodePoint","endCodePoint","intersection","argument","contains","clone","set","options","replace","toRegExp","flags","pattern","indexOf","RegExp","valueOf","toArray","define","amd","nodeType"],"sources":["/Users/serteriyigunlu/Desktop/travel-log-app/node_modules/regenerate/regenerate.js"],"sourcesContent":["/*! https://mths.be/regenerate v1.4.2 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js/io.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar ERRORS = {\n\t\t'rangeOrder': 'A range\\u2019s `stop` value must be greater than or equal ' +\n\t\t\t'to the `start` value.',\n\t\t'codePointRange': 'Invalid code point value. Code points range from ' +\n\t\t\t'U+000000 to U+10FFFF.'\n\t};\n\n\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-pairs\n\tvar HIGH_SURROGATE_MIN = 0xD800;\n\tvar HIGH_SURROGATE_MAX = 0xDBFF;\n\tvar LOW_SURROGATE_MIN = 0xDC00;\n\tvar LOW_SURROGATE_MAX = 0xDFFF;\n\n\t// In Regenerate output, `\\0` is never preceded by `\\` because we sort by\n\t// code point value, so let’s keep this regular expression simple.\n\tvar regexNull = /\\\\x00([^0123456789]|$)/g;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar extend = function(destination, source) {\n\t\tvar key;\n\t\tfor (key in source) {\n\t\t\tif (hasOwnProperty.call(source, key)) {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t}\n\t\treturn destination;\n\t};\n\n\tvar forEach = function(array, callback) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tcallback(array[index], index);\n\t\t}\n\t};\n\n\tvar toString = object.toString;\n\tvar isArray = function(value) {\n\t\treturn toString.call(value) == '[object Array]';\n\t};\n\tvar isNumber = function(value) {\n\t\treturn typeof value == 'number' ||\n\t\t\ttoString.call(value) == '[object Number]';\n\t};\n\n\t// This assumes that `number` is a positive integer that `toString()`s nicely\n\t// (which is the case for all code point values).\n\tvar zeroes = '0000';\n\tvar pad = function(number, totalCharacters) {\n\t\tvar string = String(number);\n\t\treturn string.length < totalCharacters\n\t\t\t? (zeroes + string).slice(-totalCharacters)\n\t\t\t: string;\n\t};\n\n\tvar hex = function(number) {\n\t\treturn Number(number).toString(16).toUpperCase();\n\t};\n\n\tvar slice = [].slice;\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar dataFromCodePoints = function(codePoints) {\n\t\tvar index = -1;\n\t\tvar length = codePoints.length;\n\t\tvar max = length - 1;\n\t\tvar result = [];\n\t\tvar isStart = true;\n\t\tvar tmp;\n\t\tvar previous = 0;\n\t\twhile (++index < length) {\n\t\t\ttmp = codePoints[index];\n\t\t\tif (isStart) {\n\t\t\t\tresult.push(tmp);\n\t\t\t\tprevious = tmp;\n\t\t\t\tisStart = false;\n\t\t\t} else {\n\t\t\t\tif (tmp == previous + 1) {\n\t\t\t\t\tif (index != max) {\n\t\t\t\t\t\tprevious = tmp;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisStart = true;\n\t\t\t\t\t\tresult.push(tmp + 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// End the previous range and start a new one.\n\t\t\t\t\tresult.push(previous + 1, tmp);\n\t\t\t\t\tprevious = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!isStart) {\n\t\t\tresult.push(tmp + 1);\n\t\t}\n\t\treturn result;\n\t};\n\n\tvar dataRemove = function(data, codePoint) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\t// Modify this pair.\n\t\t\t\tif (codePoint == start) {\n\t\t\t\t\tif (end == start + 1) {\n\t\t\t\t\t\t// Just remove `start` and `end`.\n\t\t\t\t\t\tdata.splice(index, 2);\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Just replace `start` with a new value.\n\t\t\t\t\t\tdata[index] = codePoint + 1;\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\t\t\t} else if (codePoint == end - 1) {\n\t\t\t\t\t// Just replace `end` with a new value.\n\t\t\t\t\tdata[index + 1] = codePoint;\n\t\t\t\t\treturn data;\n\t\t\t\t} else {\n\t\t\t\t\t// Replace `[start, end]` with `[startA, endA, startB, endB]`.\n\t\t\t\t\tdata.splice(index, 2, start, codePoint, codePoint + 1, end);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataRemoveRange = function(data, rangeStart, rangeEnd) {\n\t\tif (rangeEnd < rangeStart) {\n\t\t\tthrow Error(ERRORS.rangeOrder);\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\twhile (index < data.length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n\t\t\t// Exit as soon as no more matching pairs can be found.\n\t\t\tif (start > rangeEnd) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if this range pair is equal to, or forms a subset of, the range\n\t\t\t// to be removed.\n\t\t\t// E.g. we have `[0, 11, 40, 51]` and want to remove 0-10 → `[40, 51]`.\n\t\t\t// E.g. we have `[40, 51]` and want to remove 0-100 → `[]`.\n\t\t\tif (rangeStart <= start && rangeEnd >= end) {\n\t\t\t\t// Remove this pair.\n\t\t\t\tdata.splice(index, 2);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check if both `rangeStart` and `rangeEnd` are within the bounds of\n\t\t\t// this pair.\n\t\t\t// E.g. we have `[0, 11]` and want to remove 4-6 → `[0, 4, 7, 11]`.\n\t\t\tif (rangeStart >= start && rangeEnd < end) {\n\t\t\t\tif (rangeStart == start) {\n\t\t\t\t\t// Replace `[start, end]` with `[startB, endB]`.\n\t\t\t\t\tdata[index] = rangeEnd + 1;\n\t\t\t\t\tdata[index + 1] = end + 1;\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t\t// Replace `[start, end]` with `[startA, endA, startB, endB]`.\n\t\t\t\tdata.splice(index, 2, start, rangeStart, rangeEnd + 1, end + 1);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if only `rangeStart` is within the bounds of this pair.\n\t\t\t// E.g. we have `[0, 11]` and want to remove 4-20 → `[0, 4]`.\n\t\t\tif (rangeStart >= start && rangeStart <= end) {\n\t\t\t\t// Replace `end` with `rangeStart`.\n\t\t\t\tdata[index + 1] = rangeStart;\n\t\t\t\t// Note: we cannot `return` just yet, in case any following pairs still\n\t\t\t\t// contain matching code points.\n\t\t\t\t// E.g. we have `[0, 11, 14, 31]` and want to remove 4-20\n\t\t\t\t// → `[0, 4, 21, 31]`.\n\t\t\t}\n\n\t\t\t// Check if only `rangeEnd` is within the bounds of this pair.\n\t\t\t// E.g. we have `[14, 31]` and want to remove 4-20 → `[21, 31]`.\n\t\t\telse if (rangeEnd >= start && rangeEnd <= end) {\n\t\t\t\t// Just replace `start`.\n\t\t\t\tdata[index] = rangeEnd + 1;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\t var dataAdd = function(data, codePoint) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar lastIndex = null;\n\t\tvar length = data.length;\n\t\tif (codePoint < 0x0 || codePoint > 0x10FFFF) {\n\t\t\tthrow RangeError(ERRORS.codePointRange);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\n\t\t\t// Check if the code point is already in the set.\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif (codePoint == start - 1) {\n\t\t\t\t// Just replace `start` with a new value.\n\t\t\t\tdata[index] = codePoint;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// At this point, if `start` is `greater` than `codePoint`, insert a new\n\t\t\t// `[start, end]` pair before the current pair, or after the current pair\n\t\t\t// if there is a known `lastIndex`.\n\t\t\tif (start > codePoint) {\n\t\t\t\tdata.splice(\n\t\t\t\t\tlastIndex != null ? lastIndex + 2 : 0,\n\t\t\t\t\t0,\n\t\t\t\t\tcodePoint,\n\t\t\t\t\tcodePoint + 1\n\t\t\t\t);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif (codePoint == end) {\n\t\t\t\t// Check if adding this code point causes two separate ranges to become\n\t\t\t\t// a single range, e.g. `dataAdd([0, 4, 5, 10], 4)` → `[0, 10]`.\n\t\t\t\tif (codePoint + 1 == data[index + 2]) {\n\t\t\t\t\tdata.splice(index, 4, start, data[index + 3]);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t\t// Else, just replace `end` with a new value.\n\t\t\t\tdata[index + 1] = codePoint + 1;\n\t\t\t\treturn data;\n\t\t\t}\n\t\t\tlastIndex = index;\n\t\t\tindex += 2;\n\t\t}\n\t\t// The loop has finished; add the new pair to the end of the data set.\n\t\tdata.push(codePoint, codePoint + 1);\n\t\treturn data;\n\t};\n\n\tvar dataAddData = function(dataA, dataB) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar data = dataA.slice();\n\t\tvar length = dataB.length;\n\t\twhile (index < length) {\n\t\t\tstart = dataB[index];\n\t\t\tend = dataB[index + 1] - 1;\n\t\t\tif (start == end) {\n\t\t\t\tdata = dataAdd(data, start);\n\t\t\t} else {\n\t\t\t\tdata = dataAddRange(data, start, end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataRemoveData = function(dataA, dataB) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar data = dataA.slice();\n\t\tvar length = dataB.length;\n\t\twhile (index < length) {\n\t\t\tstart = dataB[index];\n\t\t\tend = dataB[index + 1] - 1;\n\t\t\tif (start == end) {\n\t\t\t\tdata = dataRemove(data, start);\n\t\t\t} else {\n\t\t\t\tdata = dataRemoveRange(data, start, end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataAddRange = function(data, rangeStart, rangeEnd) {\n\t\tif (rangeEnd < rangeStart) {\n\t\t\tthrow Error(ERRORS.rangeOrder);\n\t\t}\n\t\tif (\n\t\t\trangeStart < 0x0 || rangeStart > 0x10FFFF ||\n\t\t\trangeEnd < 0x0 || rangeEnd > 0x10FFFF\n\t\t) {\n\t\t\tthrow RangeError(ERRORS.codePointRange);\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar added = false;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\n\t\t\tif (added) {\n\t\t\t\t// The range has already been added to the set; at this point, we just\n\t\t\t\t// need to get rid of the following ranges in case they overlap.\n\n\t\t\t\t// Check if this range can be combined with the previous range.\n\t\t\t\tif (start == rangeEnd + 1) {\n\t\t\t\t\tdata.splice(index - 1, 2);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Exit as soon as no more possibly overlapping pairs can be found.\n\t\t\t\tif (start > rangeEnd) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// E.g. `[0, 11, 12, 16]` and we’ve added 5-15, so we now have\n\t\t\t\t// `[0, 16, 12, 16]`. Remove the `12,16` part, as it lies within the\n\t\t\t\t// `0,16` range that was previously added.\n\t\t\t\tif (start >= rangeStart && start <= rangeEnd) {\n\t\t\t\t\t// `start` lies within the range that was previously added.\n\n\t\t\t\t\tif (end > rangeStart && end - 1 <= rangeEnd) {\n\t\t\t\t\t\t// `end` lies within the range that was previously added as well,\n\t\t\t\t\t\t// so remove this pair.\n\t\t\t\t\t\tdata.splice(index, 2);\n\t\t\t\t\t\tindex -= 2;\n\t\t\t\t\t\t// Note: we cannot `return` just yet, as there may still be other\n\t\t\t\t\t\t// overlapping pairs.\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `start` lies within the range that was previously added, but\n\t\t\t\t\t\t// `end` doesn’t. E.g. `[0, 11, 12, 31]` and we’ve added 5-15, so\n\t\t\t\t\t\t// now we have `[0, 16, 12, 31]`. This must be written as `[0, 31]`.\n\t\t\t\t\t\t// Remove the previously added `end` and the current `start`.\n\t\t\t\t\t\tdata.splice(index - 1, 2);\n\t\t\t\t\t\tindex -= 2;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Note: we cannot return yet.\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\telse if (start == rangeEnd + 1 || start == rangeEnd) {\n\t\t\t\tdata[index] = rangeStart;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if a new pair must be inserted *before* the current one.\n\t\t\telse if (start > rangeEnd) {\n\t\t\t\tdata.splice(index, 0, rangeStart, rangeEnd + 1);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\telse if (rangeStart >= start && rangeStart < end && rangeEnd + 1 <= end) {\n\t\t\t\t// The new range lies entirely within an existing range pair. No action\n\t\t\t\t// needed.\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\telse if (\n\t\t\t\t// E.g. `[0, 11]` and you add 5-15 → `[0, 16]`.\n\t\t\t\t(rangeStart >= start && rangeStart < end) ||\n\t\t\t\t// E.g. `[0, 3]` and you add 3-6 → `[0, 7]`.\n\t\t\t\tend == rangeStart\n\t\t\t) {\n\t\t\t\t// Replace `end` with the new value.\n\t\t\t\tdata[index + 1] = rangeEnd + 1;\n\t\t\t\t// Make sure the next range pair doesn’t overlap, e.g. `[0, 11, 12, 14]`\n\t\t\t\t// and you add 5-15 → `[0, 16]`, i.e. remove the `12,14` part.\n\t\t\t\tadded = true;\n\t\t\t\t// Note: we cannot `return` just yet.\n\t\t\t}\n\n\t\t\telse if (rangeStart <= start && rangeEnd + 1 >= end) {\n\t\t\t\t// The new range is a superset of the old range.\n\t\t\t\tdata[index] = rangeStart;\n\t\t\t\tdata[index + 1] = rangeEnd + 1;\n\t\t\t\tadded = true;\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\t// The loop has finished without doing anything; add the new pair to the end\n\t\t// of the data set.\n\t\tif (!added) {\n\t\t\tdata.push(rangeStart, rangeEnd + 1);\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataContains = function(data, codePoint) {\n\t\tvar index = 0;\n\t\tvar length = data.length;\n\t\t// Exit early if `codePoint` is not within `data`’s overall range.\n\t\tvar start = data[index];\n\t\tvar end = data[length - 1];\n\t\tif (length >= 2) {\n\t\t\tif (codePoint < start || codePoint > end) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar dataIntersection = function(data, codePoints) {\n\t\tvar index = 0;\n\t\tvar length = codePoints.length;\n\t\tvar codePoint;\n\t\tvar result = [];\n\t\twhile (index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tif (dataContains(data, codePoint)) {\n\t\t\t\tresult.push(codePoint);\n\t\t\t}\n\t\t\t++index;\n\t\t}\n\t\treturn dataFromCodePoints(result);\n\t};\n\n\tvar dataIsEmpty = function(data) {\n\t\treturn !data.length;\n\t};\n\n\tvar dataIsSingleton = function(data) {\n\t\t// Check if the set only represents a single code point.\n\t\treturn data.length == 2 && data[0] + 1 == data[1];\n\t};\n\n\tvar dataToArray = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar result = [];\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\twhile (start < end) {\n\t\t\t\tresult.push(start);\n\t\t\t\t++start;\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn result;\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\tvar floor = Math.floor;\n\tvar highSurrogate = function(codePoint) {\n\t\treturn parseInt(\n\t\t\tfloor((codePoint - 0x10000) / 0x400) + HIGH_SURROGATE_MIN,\n\t\t\t10\n\t\t);\n\t};\n\n\tvar lowSurrogate = function(codePoint) {\n\t\treturn parseInt(\n\t\t\t(codePoint - 0x10000) % 0x400 + LOW_SURROGATE_MIN,\n\t\t\t10\n\t\t);\n\t};\n\n\tvar stringFromCharCode = String.fromCharCode;\n\tvar codePointToString = function(codePoint) {\n\t\tvar string;\n\t\t// https://mathiasbynens.be/notes/javascript-escapes#single\n\t\t// Note: the `\\b` escape sequence for U+0008 BACKSPACE in strings has a\n\t\t// different meaning in regular expressions (word boundary), so it cannot\n\t\t// be used here.\n\t\tif (codePoint == 0x09) {\n\t\t\tstring = '\\\\t';\n\t\t}\n\t\t// Note: IE < 9 treats `'\\v'` as `'v'`, so avoid using it.\n\t\t// else if (codePoint == 0x0B) {\n\t\t// \tstring = '\\\\v';\n\t\t// }\n\t\telse if (codePoint == 0x0A) {\n\t\t\tstring = '\\\\n';\n\t\t}\n\t\telse if (codePoint == 0x0C) {\n\t\t\tstring = '\\\\f';\n\t\t}\n\t\telse if (codePoint == 0x0D) {\n\t\t\tstring = '\\\\r';\n\t\t}\n\t\telse if (codePoint == 0x2D) {\n\t\t\t// https://mathiasbynens.be/notes/javascript-escapes#hexadecimal\n\t\t\t// Note: `-` (U+002D HYPHEN-MINUS) is escaped in this way rather\n\t\t\t// than by backslash-escaping, in case the output is used outside\n\t\t\t// of a character class in a `u` RegExp. /\\-/u throws, but\n\t\t\t// /\\x2D/u is fine.\n\t\t\tstring = '\\\\x2D';\n\t\t}\n\t\telse if (codePoint == 0x5C) {\n\t\t\tstring = '\\\\\\\\';\n\t\t}\n\t\telse if (\n\t\t\tcodePoint == 0x24 ||\n\t\t\t(codePoint >= 0x28 && codePoint <= 0x2B) ||\n\t\t\tcodePoint == 0x2E || codePoint == 0x2F ||\n\t\t\tcodePoint == 0x3F ||\n\t\t\t(codePoint >= 0x5B && codePoint <= 0x5E) ||\n\t\t\t(codePoint >= 0x7B && codePoint <= 0x7D)\n\t\t) {\n\t\t\t// The code point maps to an unsafe printable ASCII character;\n\t\t\t// backslash-escape it. Here’s the list of those symbols:\n\t\t\t//\n\t\t\t//     $()*+./?[\\]^{|}\n\t\t\t//\n\t\t\t// This matches SyntaxCharacters as well as `/` (U+002F SOLIDUS).\n\t\t\t// https://tc39.github.io/ecma262/#prod-SyntaxCharacter\n\t\t\tstring = '\\\\' + stringFromCharCode(codePoint);\n\t\t}\n\t\telse if (codePoint >= 0x20 && codePoint <= 0x7E) {\n\t\t\t// The code point maps to one of these printable ASCII symbols\n\t\t\t// (including the space character):\n\t\t\t//\n\t\t\t//      !\"#%&',/0123456789:;<=>@ABCDEFGHIJKLMNO\n\t\t\t//     PQRSTUVWXYZ_`abcdefghijklmnopqrstuvwxyz~\n\t\t\t//\n\t\t\t// These can safely be used directly.\n\t\t\tstring = stringFromCharCode(codePoint);\n\t\t}\n\t\telse if (codePoint <= 0xFF) {\n\t\t\tstring = '\\\\x' + pad(hex(codePoint), 2);\n\t\t}\n\t\telse { // `codePoint <= 0xFFFF` holds true.\n\t\t\t// https://mathiasbynens.be/notes/javascript-escapes#unicode\n\t\t\tstring = '\\\\u' + pad(hex(codePoint), 4);\n\t\t}\n\n\t\t// There’s no need to account for astral symbols / surrogate pairs here,\n\t\t// since `codePointToString` is private and only used for BMP code points.\n\t\t// But if that’s what you need, just add an `else` block with this code:\n\t\t//\n\t\t//     string = '\\\\u' + pad(hex(highSurrogate(codePoint)), 4)\n\t\t//     \t+ '\\\\u' + pad(hex(lowSurrogate(codePoint)), 4);\n\n\t\treturn string;\n\t};\n\n\tvar codePointToStringUnicode = function(codePoint) {\n\t\tif (codePoint <= 0xFFFF) {\n\t\t\treturn codePointToString(codePoint);\n\t\t}\n\t\treturn '\\\\u{' + codePoint.toString(16).toUpperCase() + '}';\n\t};\n\n\tvar symbolToCodePoint = function(symbol) {\n\t\tvar length = symbol.length;\n\t\tvar first = symbol.charCodeAt(0);\n\t\tvar second;\n\t\tif (\n\t\t\tfirst >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX &&\n\t\t\tlength > 1 // There is a next code unit.\n\t\t) {\n\t\t\t// `first` is a high surrogate, and there is a next character. Assume\n\t\t\t// it’s a low surrogate (else it’s invalid usage of Regenerate anyway).\n\t\t\tsecond = symbol.charCodeAt(1);\n\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\treturn (first - HIGH_SURROGATE_MIN) * 0x400 +\n\t\t\t\tsecond - LOW_SURROGATE_MIN + 0x10000;\n\t\t}\n\t\treturn first;\n\t};\n\n\tvar createBMPCharacterClasses = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar result = '';\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\tif (dataIsSingleton(data)) {\n\t\t\treturn codePointToString(data[0]);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\t\t\tif (start == end) {\n\t\t\t\tresult += codePointToString(start);\n\t\t\t} else if (start + 1 == end) {\n\t\t\t\tresult += codePointToString(start) + codePointToString(end);\n\t\t\t} else {\n\t\t\t\tresult += codePointToString(start) + '-' + codePointToString(end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn '[' + result + ']';\n\t};\n\n\tvar createUnicodeCharacterClasses = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar result = '';\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\tif (dataIsSingleton(data)) {\n\t\t\treturn codePointToStringUnicode(data[0]);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\t\t\tif (start == end) {\n\t\t\t\tresult += codePointToStringUnicode(start);\n\t\t\t} else if (start + 1 == end) {\n\t\t\t\tresult += codePointToStringUnicode(start) + codePointToStringUnicode(end);\n\t\t\t} else {\n\t\t\t\tresult += codePointToStringUnicode(start) + '-' + codePointToStringUnicode(end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn '[' + result + ']';\n\t};\n\n\tvar splitAtBMP = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar loneHighSurrogates = [];\n\t\tvar loneLowSurrogates = [];\n\t\tvar bmp = [];\n\t\tvar astral = [];\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n\t\t\tif (start < HIGH_SURROGATE_MIN) {\n\n\t\t\t\t// The range starts and ends before the high surrogate range.\n\t\t\t\t// E.g. (0, 0x10).\n\t\t\t\tif (end < HIGH_SURROGATE_MIN) {\n\t\t\t\t\tbmp.push(start, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts before the high surrogate range and ends within it.\n\t\t\t\t// E.g. (0, 0xD855).\n\t\t\t\tif (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts before the high surrogate range and ends in the low\n\t\t\t\t// surrogate range. E.g. (0, 0xDCFF).\n\t\t\t\tif (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts before the high surrogate range and ends after the\n\t\t\t\t// low surrogate range. E.g. (0, 0x10FFFF).\n\t\t\t\tif (end > LOW_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);\n\t\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (start >= HIGH_SURROGATE_MIN && start <= HIGH_SURROGATE_MAX) {\n\n\t\t\t\t// The range starts and ends in the high surrogate range.\n\t\t\t\t// E.g. (0xD855, 0xD866).\n\t\t\t\tif (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {\n\t\t\t\t\tloneHighSurrogates.push(start, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts in the high surrogate range and ends in the low\n\t\t\t\t// surrogate range. E.g. (0xD855, 0xDCFF).\n\t\t\t\tif (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts in the high surrogate range and ends after the low\n\t\t\t\t// surrogate range. E.g. (0xD855, 0x10FFFF).\n\t\t\t\tif (end > LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);\n\t\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (start >= LOW_SURROGATE_MIN && start <= LOW_SURROGATE_MAX) {\n\n\t\t\t\t// The range starts and ends in the low surrogate range.\n\t\t\t\t// E.g. (0xDCFF, 0xDDFF).\n\t\t\t\tif (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneLowSurrogates.push(start, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts in the low surrogate range and ends after the low\n\t\t\t\t// surrogate range. E.g. (0xDCFF, 0x10FFFF).\n\t\t\t\tif (end > LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneLowSurrogates.push(start, LOW_SURROGATE_MAX + 1);\n\t\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (start > LOW_SURROGATE_MAX && start <= 0xFFFF) {\n\n\t\t\t\t// The range starts and ends after the low surrogate range.\n\t\t\t\t// E.g. (0xFFAA, 0x10FFFF).\n\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\tbmp.push(start, end + 1);\n\t\t\t\t} else {\n\t\t\t\t\tbmp.push(start, 0xFFFF + 1);\n\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// The range starts and ends in the astral range.\n\t\t\t\tastral.push(start, end + 1);\n\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\treturn {\n\t\t\t'loneHighSurrogates': loneHighSurrogates,\n\t\t\t'loneLowSurrogates': loneLowSurrogates,\n\t\t\t'bmp': bmp,\n\t\t\t'astral': astral\n\t\t};\n\t};\n\n\tvar optimizeSurrogateMappings = function(surrogateMappings) {\n\t\tvar result = [];\n\t\tvar tmpLow = [];\n\t\tvar addLow = false;\n\t\tvar mapping;\n\t\tvar nextMapping;\n\t\tvar highSurrogates;\n\t\tvar lowSurrogates;\n\t\tvar nextHighSurrogates;\n\t\tvar nextLowSurrogates;\n\t\tvar index = -1;\n\t\tvar length = surrogateMappings.length;\n\t\twhile (++index < length) {\n\t\t\tmapping = surrogateMappings[index];\n\t\t\tnextMapping = surrogateMappings[index + 1];\n\t\t\tif (!nextMapping) {\n\t\t\t\tresult.push(mapping);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\thighSurrogates = mapping[0];\n\t\t\tlowSurrogates = mapping[1];\n\t\t\tnextHighSurrogates = nextMapping[0];\n\t\t\tnextLowSurrogates = nextMapping[1];\n\n\t\t\t// Check for identical high surrogate ranges.\n\t\t\ttmpLow = lowSurrogates;\n\t\t\twhile (\n\t\t\t\tnextHighSurrogates &&\n\t\t\t\thighSurrogates[0] == nextHighSurrogates[0] &&\n\t\t\t\thighSurrogates[1] == nextHighSurrogates[1]\n\t\t\t) {\n\t\t\t\t// Merge with the next item.\n\t\t\t\tif (dataIsSingleton(nextLowSurrogates)) {\n\t\t\t\t\ttmpLow = dataAdd(tmpLow, nextLowSurrogates[0]);\n\t\t\t\t} else {\n\t\t\t\t\ttmpLow = dataAddRange(\n\t\t\t\t\t\ttmpLow,\n\t\t\t\t\t\tnextLowSurrogates[0],\n\t\t\t\t\t\tnextLowSurrogates[1] - 1\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t++index;\n\t\t\t\tmapping = surrogateMappings[index];\n\t\t\t\thighSurrogates = mapping[0];\n\t\t\t\tlowSurrogates = mapping[1];\n\t\t\t\tnextMapping = surrogateMappings[index + 1];\n\t\t\t\tnextHighSurrogates = nextMapping && nextMapping[0];\n\t\t\t\tnextLowSurrogates = nextMapping && nextMapping[1];\n\t\t\t\taddLow = true;\n\t\t\t}\n\t\t\tresult.push([\n\t\t\t\thighSurrogates,\n\t\t\t\taddLow ? tmpLow : lowSurrogates\n\t\t\t]);\n\t\t\taddLow = false;\n\t\t}\n\t\treturn optimizeByLowSurrogates(result);\n\t};\n\n\tvar optimizeByLowSurrogates = function(surrogateMappings) {\n\t\tif (surrogateMappings.length == 1) {\n\t\t\treturn surrogateMappings;\n\t\t}\n\t\tvar index = -1;\n\t\tvar innerIndex = -1;\n\t\twhile (++index < surrogateMappings.length) {\n\t\t\tvar mapping = surrogateMappings[index];\n\t\t\tvar lowSurrogates = mapping[1];\n\t\t\tvar lowSurrogateStart = lowSurrogates[0];\n\t\t\tvar lowSurrogateEnd = lowSurrogates[1];\n\t\t\tinnerIndex = index; // Note: the loop starts at the next index.\n\t\t\twhile (++innerIndex < surrogateMappings.length) {\n\t\t\t\tvar otherMapping = surrogateMappings[innerIndex];\n\t\t\t\tvar otherLowSurrogates = otherMapping[1];\n\t\t\t\tvar otherLowSurrogateStart = otherLowSurrogates[0];\n\t\t\t\tvar otherLowSurrogateEnd = otherLowSurrogates[1];\n\t\t\t\tif (\n\t\t\t\t\tlowSurrogateStart == otherLowSurrogateStart &&\n\t\t\t\t\tlowSurrogateEnd == otherLowSurrogateEnd &&\n\t\t\t\t\totherLowSurrogates.length === 2\n\t\t\t\t) {\n\t\t\t\t\t// Add the code points in the other item to this one.\n\t\t\t\t\tif (dataIsSingleton(otherMapping[0])) {\n\t\t\t\t\t\tmapping[0] = dataAdd(mapping[0], otherMapping[0][0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmapping[0] = dataAddRange(\n\t\t\t\t\t\t\tmapping[0],\n\t\t\t\t\t\t\totherMapping[0][0],\n\t\t\t\t\t\t\totherMapping[0][1] - 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Remove the other, now redundant, item.\n\t\t\t\t\tsurrogateMappings.splice(innerIndex, 1);\n\t\t\t\t\t--innerIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn surrogateMappings;\n\t};\n\n\tvar surrogateSet = function(data) {\n\t\t// Exit early if `data` is an empty set.\n\t\tif (!data.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar startHigh;\n\t\tvar startLow;\n\t\tvar endHigh;\n\t\tvar endLow;\n\t\tvar surrogateMappings = [];\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1;\n\n\t\t\tstartHigh = highSurrogate(start);\n\t\t\tstartLow = lowSurrogate(start);\n\t\t\tendHigh = highSurrogate(end);\n\t\t\tendLow = lowSurrogate(end);\n\n\t\t\tvar startsWithLowestLowSurrogate = startLow == LOW_SURROGATE_MIN;\n\t\t\tvar endsWithHighestLowSurrogate = endLow == LOW_SURROGATE_MAX;\n\t\t\tvar complete = false;\n\n\t\t\t// Append the previous high-surrogate-to-low-surrogate mappings.\n\t\t\t// Step 1: `(startHigh, startLow)` to `(startHigh, LOW_SURROGATE_MAX)`.\n\t\t\tif (\n\t\t\t\tstartHigh == endHigh ||\n\t\t\t\tstartsWithLowestLowSurrogate && endsWithHighestLowSurrogate\n\t\t\t) {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[startHigh, endHigh + 1],\n\t\t\t\t\t[startLow, endLow + 1]\n\t\t\t\t]);\n\t\t\t\tcomplete = true;\n\t\t\t} else {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[startHigh, startHigh + 1],\n\t\t\t\t\t[startLow, LOW_SURROGATE_MAX + 1]\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\t// Step 2: `(startHigh + 1, LOW_SURROGATE_MIN)` to\n\t\t\t// `(endHigh - 1, LOW_SURROGATE_MAX)`.\n\t\t\tif (!complete && startHigh + 1 < endHigh) {\n\t\t\t\tif (endsWithHighestLowSurrogate) {\n\t\t\t\t\t// Combine step 2 and step 3.\n\t\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t\t[startHigh + 1, endHigh + 1],\n\t\t\t\t\t\t[LOW_SURROGATE_MIN, endLow + 1]\n\t\t\t\t\t]);\n\t\t\t\t\tcomplete = true;\n\t\t\t\t} else {\n\t\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t\t[startHigh + 1, endHigh],\n\t\t\t\t\t\t[LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1]\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Step 3. `(endHigh, LOW_SURROGATE_MIN)` to `(endHigh, endLow)`.\n\t\t\tif (!complete) {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[endHigh, endHigh + 1],\n\t\t\t\t\t[LOW_SURROGATE_MIN, endLow + 1]\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\n\t\t// The format of `surrogateMappings` is as follows:\n\t\t//\n\t\t//     [ surrogateMapping1, surrogateMapping2 ]\n\t\t//\n\t\t// i.e.:\n\t\t//\n\t\t//     [\n\t\t//       [ highSurrogates1, lowSurrogates1 ],\n\t\t//       [ highSurrogates2, lowSurrogates2 ]\n\t\t//     ]\n\t\treturn optimizeSurrogateMappings(surrogateMappings);\n\t};\n\n\tvar createSurrogateCharacterClasses = function(surrogateMappings) {\n\t\tvar result = [];\n\t\tforEach(surrogateMappings, function(surrogateMapping) {\n\t\t\tvar highSurrogates = surrogateMapping[0];\n\t\t\tvar lowSurrogates = surrogateMapping[1];\n\t\t\tresult.push(\n\t\t\t\tcreateBMPCharacterClasses(highSurrogates) +\n\t\t\t\tcreateBMPCharacterClasses(lowSurrogates)\n\t\t\t);\n\t\t});\n\t\treturn result.join('|');\n\t};\n\n\tvar createCharacterClassesFromData = function(data, bmpOnly, hasUnicodeFlag) {\n\t\tif (hasUnicodeFlag) {\n\t\t\treturn createUnicodeCharacterClasses(data);\n\t\t}\n\t\tvar result = [];\n\n\t\tvar parts = splitAtBMP(data);\n\t\tvar loneHighSurrogates = parts.loneHighSurrogates;\n\t\tvar loneLowSurrogates = parts.loneLowSurrogates;\n\t\tvar bmp = parts.bmp;\n\t\tvar astral = parts.astral;\n\t\tvar hasLoneHighSurrogates = !dataIsEmpty(loneHighSurrogates);\n\t\tvar hasLoneLowSurrogates = !dataIsEmpty(loneLowSurrogates);\n\n\t\tvar surrogateMappings = surrogateSet(astral);\n\n\t\tif (bmpOnly) {\n\t\t\tbmp = dataAddData(bmp, loneHighSurrogates);\n\t\t\thasLoneHighSurrogates = false;\n\t\t\tbmp = dataAddData(bmp, loneLowSurrogates);\n\t\t\thasLoneLowSurrogates = false;\n\t\t}\n\n\t\tif (!dataIsEmpty(bmp)) {\n\t\t\t// The data set contains BMP code points that are not high surrogates\n\t\t\t// needed for astral code points in the set.\n\t\t\tresult.push(createBMPCharacterClasses(bmp));\n\t\t}\n\t\tif (surrogateMappings.length) {\n\t\t\t// The data set contains astral code points; append character classes\n\t\t\t// based on their surrogate pairs.\n\t\t\tresult.push(createSurrogateCharacterClasses(surrogateMappings));\n\t\t}\n\t\t// https://gist.github.com/mathiasbynens/bbe7f870208abcfec860\n\t\tif (hasLoneHighSurrogates) {\n\t\t\tresult.push(\n\t\t\t\tcreateBMPCharacterClasses(loneHighSurrogates) +\n\t\t\t\t// Make sure the high surrogates aren’t part of a surrogate pair.\n\t\t\t\t'(?![\\\\uDC00-\\\\uDFFF])'\n\t\t\t);\n\t\t}\n\t\tif (hasLoneLowSurrogates) {\n\t\t\tresult.push(\n\t\t\t\t// It is not possible to accurately assert the low surrogates aren’t\n\t\t\t\t// part of a surrogate pair, since JavaScript regular expressions do\n\t\t\t\t// not support lookbehind.\n\t\t\t\t'(?:[^\\\\uD800-\\\\uDBFF]|^)' +\n\t\t\t\tcreateBMPCharacterClasses(loneLowSurrogates)\n\t\t\t);\n\t\t}\n\t\treturn result.join('|');\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// `regenerate` can be used as a constructor (and new methods can be added to\n\t// its prototype) but also as a regular function, the latter of which is the\n\t// documented and most common usage. For that reason, it’s not capitalized.\n\tvar regenerate = function(value) {\n\t\tif (arguments.length > 1) {\n\t\t\tvalue = slice.call(arguments);\n\t\t}\n\t\tif (this instanceof regenerate) {\n\t\t\tthis.data = [];\n\t\t\treturn value ? this.add(value) : this;\n\t\t}\n\t\treturn (new regenerate).add(value);\n\t};\n\n\tregenerate.version = '1.4.2';\n\n\tvar proto = regenerate.prototype;\n\textend(proto, {\n\t\t'add': function(value) {\n\t\t\tvar $this = this;\n\t\t\tif (value == null) {\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (value instanceof regenerate) {\n\t\t\t\t// Allow passing other Regenerate instances.\n\t\t\t\t$this.data = dataAddData($this.data, value.data);\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tvalue = slice.call(arguments);\n\t\t\t}\n\t\t\tif (isArray(value)) {\n\t\t\t\tforEach(value, function(item) {\n\t\t\t\t\t$this.add(item);\n\t\t\t\t});\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\t$this.data = dataAdd(\n\t\t\t\t$this.data,\n\t\t\t\tisNumber(value) ? value : symbolToCodePoint(value)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'remove': function(value) {\n\t\t\tvar $this = this;\n\t\t\tif (value == null) {\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (value instanceof regenerate) {\n\t\t\t\t// Allow passing other Regenerate instances.\n\t\t\t\t$this.data = dataRemoveData($this.data, value.data);\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tvalue = slice.call(arguments);\n\t\t\t}\n\t\t\tif (isArray(value)) {\n\t\t\t\tforEach(value, function(item) {\n\t\t\t\t\t$this.remove(item);\n\t\t\t\t});\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\t$this.data = dataRemove(\n\t\t\t\t$this.data,\n\t\t\t\tisNumber(value) ? value : symbolToCodePoint(value)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'addRange': function(start, end) {\n\t\t\tvar $this = this;\n\t\t\t$this.data = dataAddRange($this.data,\n\t\t\t\tisNumber(start) ? start : symbolToCodePoint(start),\n\t\t\t\tisNumber(end) ? end : symbolToCodePoint(end)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'removeRange': function(start, end) {\n\t\t\tvar $this = this;\n\t\t\tvar startCodePoint = isNumber(start) ? start : symbolToCodePoint(start);\n\t\t\tvar endCodePoint = isNumber(end) ? end : symbolToCodePoint(end);\n\t\t\t$this.data = dataRemoveRange(\n\t\t\t\t$this.data,\n\t\t\t\tstartCodePoint,\n\t\t\t\tendCodePoint\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'intersection': function(argument) {\n\t\t\tvar $this = this;\n\t\t\t// Allow passing other Regenerate instances.\n\t\t\t// TODO: Optimize this by writing and using `dataIntersectionData()`.\n\t\t\tvar array = argument instanceof regenerate ?\n\t\t\t\tdataToArray(argument.data) :\n\t\t\t\targument;\n\t\t\t$this.data = dataIntersection($this.data, array);\n\t\t\treturn $this;\n\t\t},\n\t\t'contains': function(codePoint) {\n\t\t\treturn dataContains(\n\t\t\t\tthis.data,\n\t\t\t\tisNumber(codePoint) ? codePoint : symbolToCodePoint(codePoint)\n\t\t\t);\n\t\t},\n\t\t'clone': function() {\n\t\t\tvar set = new regenerate;\n\t\t\tset.data = this.data.slice(0);\n\t\t\treturn set;\n\t\t},\n\t\t'toString': function(options) {\n\t\t\tvar result = createCharacterClassesFromData(\n\t\t\t\tthis.data,\n\t\t\t\toptions ? options.bmpOnly : false,\n\t\t\t\toptions ? options.hasUnicodeFlag : false\n\t\t\t);\n\t\t\tif (!result) {\n\t\t\t\t// For an empty set, return something that can be inserted `/here/` to\n\t\t\t\t// form a valid regular expression. Avoid `(?:)` since that matches the\n\t\t\t\t// empty string.\n\t\t\t\treturn '[]';\n\t\t\t}\n\t\t\t// Use `\\0` instead of `\\x00` where possible.\n\t\t\treturn result.replace(regexNull, '\\\\0$1');\n\t\t},\n\t\t'toRegExp': function(flags) {\n\t\t\tvar pattern = this.toString(\n\t\t\t\tflags && flags.indexOf('u') != -1 ?\n\t\t\t\t\t{ 'hasUnicodeFlag': true } :\n\t\t\t\t\tnull\n\t\t\t);\n\t\t\treturn RegExp(pattern, flags || '');\n\t\t},\n\t\t'valueOf': function() { // Note: `valueOf` is aliased as `toArray`.\n\t\t\treturn dataToArray(this.data);\n\t\t}\n\t});\n\n\tproto.toArray = proto.valueOf;\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn regenerate;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = regenerate;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfreeExports.regenerate = regenerate;\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.regenerate = regenerate;\n\t}\n\n}(this));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}