{"ast":null,"code":"var _jsxFileName = \"/Users/serteriyigunlu/Desktop/travel-log-app/src/components/UserPage/UserPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Routes, Route, useNavigate, useParams, useLocation, useSearchParams, useRouteLoaderData } from \"react-router-dom\";\nimport PostCard from '../PostCards/PostCard';\nimport './UserPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UserPage() {\n  _s();\n  const navigate = useNavigate();\n  const [authenticated, setAuthenticated] = useState(null);\n  const [name, setName] = useState('');\n  const [posts, setPosts] = useState([]);\n  const username = localStorage.getItem('name').charAt(0).toUpperCase() + localStorage.getItem('name').slice(1);\n  const id = localStorage.getItem('id');\n  console.log(id);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!id) {\n        // Redirect to login page if user is not logged in\n        navigate('/login');\n        return;\n      }\n      try {\n        const id = localStorage.getItem('id'); // Make sure the ID is correct\n        const response = await axios.get(`http://localhost:4011/posts/${id}`);\n        setPosts(response.data.postsArray);\n      } catch (error) {\n        console.error('Error retrieving posts:', error);\n      }\n    };\n    fetchData();\n  }, [id, navigate, posts]);\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('authenticated');\n    if (loggedInUser) {\n      setAuthenticated(loggedInUser);\n    }\n    setName(username);\n  }, [username]);\n  const createPost = () => {\n    // Navigate to /new post page\n    navigate(`/user/${id}/newPost`);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('authenticated');\n    localStorage.removeItem('name');\n    localStorage.removeItem('id');\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"name\",\n      children: [\"Welcome \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary btn-outline-warning btn-lg logout\",\n      onClick: handleLogout,\n      children: \"Log out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: posts && posts.slice(0, 5).map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-experience\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"new-experience-title\",\n        children: \"Enter a new experience\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button_create\",\n        onClick: createPost,\n        children: \"New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(UserPage, \"Ea4hvD9FZLUWDkkav0pM0NlBsfg=\", false, function () {\n  return [useNavigate];\n});\n_c = UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Routes","Route","useNavigate","useParams","useLocation","useSearchParams","useRouteLoaderData","PostCard","jsxDEV","_jsxDEV","UserPage","_s","navigate","authenticated","setAuthenticated","name","setName","posts","setPosts","username","localStorage","getItem","charAt","toUpperCase","slice","id","console","log","fetchData","response","get","data","postsArray","error","loggedInUser","createPost","handleLogout","removeItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","post","_id","_c","$RefreshReg$"],"sources":["/Users/serteriyigunlu/Desktop/travel-log-app/src/components/UserPage/UserPage.js"],"sourcesContent":["import React , {useState , useEffect} from 'react';\nimport axios from \"axios\";\nimport {\n    Routes,\n    Route,\n    useNavigate,\n    useParams,\n    useLocation,\n    useSearchParams,\n    useRouteLoaderData\n} from \"react-router-dom\";\nimport PostCard from '../PostCards/PostCard';\nimport './UserPage.css';\n\n\nexport function UserPage() {\n    const navigate = useNavigate();\n    const [authenticated, setAuthenticated] = useState(null);\n    const[name,setName] = useState('')\n    const [posts, setPosts] = useState([]);\n    const username = localStorage.getItem('name').charAt(0).toUpperCase() + localStorage.getItem('name').slice(1);\n    const id = localStorage.getItem('id');\n    console.log(id)\n    useEffect(() => {\n        const fetchData = async () => {\n            if (!id) {\n                // Redirect to login page if user is not logged in\n                navigate('/login');\n                return;\n            }\n\n            try {\n                const id = localStorage.getItem('id'); // Make sure the ID is correct\n                const response = await axios.get(`http://localhost:4011/posts/${id}`);\n                setPosts(response.data.postsArray);\n            } catch (error) {\n                console.error('Error retrieving posts:', error);\n            }\n        };\n\n        fetchData();\n    }, [id, navigate,posts]);\n\n    useEffect(() => {\n        const loggedInUser = localStorage.getItem('authenticated');\n        if (loggedInUser) {\n            setAuthenticated(loggedInUser);\n        }\n\n        setName(username);\n    }, [username]);\n\n    const createPost = () => {\n        // Navigate to /new post page\n        navigate(`/user/${id}/newPost`);\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('authenticated');\n        localStorage.removeItem('name');\n        localStorage.removeItem('id');\n        navigate('/login');\n    };\n\n    return(\n        <div>\n            <p className='name'>Welcome {username}</p>\n            <button className='btn btn-secondary btn-outline-warning btn-lg logout' onClick={handleLogout} >Log out</button>\n            <div className=\"posts-container\">\n                {posts &&\n                    posts.slice(0,5).map((post) => (\n                        <PostCard key={post._id} post={post} />\n                    ))}\n            </div>\n            <div className=\"new-experience\">\n                <h2 className=\"new-experience-title\">Enter a new experience</h2>\n                <button className=\"button_create\" onClick={createPost}>\n                    New Post\n                </button>\n            </div>\n        </div>\n\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}