{"ast":null,"code":"// Import Express\nconst express = require('express');\n// Create an instance of an Express Router\nconst router = express.Router();\nconst {\n  getAllPosts,\n  getPostById,\n  getPostsByAuthor,\n  createPost,\n  updatePost,\n  deletePost\n} = require('./PostFunctions');\n\n// Show all posts\nrouter.get('/', async (request, response) => {\n  let allPosts = await getAllPosts();\n  response.json({\n    postsCount: allPosts.length,\n    postsArray: allPosts\n  });\n});\n\n// Show posts by specific user\nrouter.get('/author/:authorID', async (request, response) => {\n  let postsByAuthor = await getPostsByAuthor(request.params.authorID);\n  response.json({\n    postsCount: postsByAuthor.length,\n    postsArray: postsByAuthor\n  });\n});\n\n// Show specific post by ID\nrouter.get('/:postID', async (request, response) => {\n  response.json(await getPostById(request.params.postID));\n});\n\n// Create a post\nrouter.post('/', async (request, response) => {\n  response.json(await createPost(request.body.postDetails));\n});\n\n// Update a specific post\nrouter.put('/:postID', async (request, response) => {\n  let postDetails = {\n    postID: request.params.postID,\n    updatedData: request.body.newPostData\n  };\n  response.json(await updatePost(postDetails));\n});\n\n// Delete a specific post\nrouter.delete('/:postID', async (request, response) => {\n  response.json(await deletePost(request.params.postID));\n});\n\n// Export the router so that other files can use it:\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","getAllPosts","getPostById","getPostsByAuthor","createPost","updatePost","deletePost","get","request","response","allPosts","json","postsCount","length","postsArray","postsByAuthor","params","authorID","postID","post","body","postDetails","put","updatedData","newPostData","delete","module","exports"],"sources":["/Users/serteriyigunlu/Desktop/travel-log-app/src/controllers/PostRoutes.js"],"sourcesContent":["// Import Express\nconst express = require('express');\n// Create an instance of an Express Router\nconst router = express.Router();\n\n\nconst {\n    getAllPosts, getPostById, getPostsByAuthor, createPost, updatePost, deletePost\n} = require('./PostFunctions');\n\n// Show all posts\nrouter.get('/', async (request, response) => {\n    let allPosts = await getAllPosts();\n\n    response.json({\n        postsCount: allPosts.length,\n        postsArray: allPosts\n    });\n});\n\n// Show posts by specific user\nrouter.get('/author/:authorID', async (request, response) => {\n    let postsByAuthor = await getPostsByAuthor(request.params.authorID);\n\n    response.json({\n        postsCount: postsByAuthor.length,\n        postsArray: postsByAuthor\n    });\n});\n\n// Show specific post by ID\nrouter.get('/:postID', async (request, response) => {\n    response.json(await getPostById(request.params.postID));\n});\n\n// Create a post\nrouter.post('/', async (request, response) => {\n    response.json(await createPost(request.body.postDetails));\n});\n\n// Update a specific post\nrouter.put('/:postID', async (request, response) => {\n    let postDetails = {\n        postID: request.params.postID,\n        updatedData: request.body.newPostData\n    };\n\n    response.json(await updatePost(postDetails));\n});\n\n// Delete a specific post\nrouter.delete('/:postID', async (request, response) => {\n    response.json(await deletePost(request.params.postID));\n});\n\n\n// Export the router so that other files can use it:\nmodule.exports = router;"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAG/B,MAAM;EACFC,WAAW;EAAEC,WAAW;EAAEC,gBAAgB;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AACxE,CAAC,GAAGR,OAAO,CAAC,iBAAiB,CAAC;;AAE9B;AACAC,MAAM,CAACQ,GAAG,CAAC,GAAG,EAAE,OAAOC,OAAO,EAAEC,QAAQ,KAAK;EACzC,IAAIC,QAAQ,GAAG,MAAMT,WAAW,CAAC,CAAC;EAElCQ,QAAQ,CAACE,IAAI,CAAC;IACVC,UAAU,EAAEF,QAAQ,CAACG,MAAM;IAC3BC,UAAU,EAAEJ;EAChB,CAAC,CAAC;AACN,CAAC,CAAC;;AAEF;AACAX,MAAM,CAACQ,GAAG,CAAC,mBAAmB,EAAE,OAAOC,OAAO,EAAEC,QAAQ,KAAK;EACzD,IAAIM,aAAa,GAAG,MAAMZ,gBAAgB,CAACK,OAAO,CAACQ,MAAM,CAACC,QAAQ,CAAC;EAEnER,QAAQ,CAACE,IAAI,CAAC;IACVC,UAAU,EAAEG,aAAa,CAACF,MAAM;IAChCC,UAAU,EAAEC;EAChB,CAAC,CAAC;AACN,CAAC,CAAC;;AAEF;AACAhB,MAAM,CAACQ,GAAG,CAAC,UAAU,EAAE,OAAOC,OAAO,EAAEC,QAAQ,KAAK;EAChDA,QAAQ,CAACE,IAAI,CAAC,MAAMT,WAAW,CAACM,OAAO,CAACQ,MAAM,CAACE,MAAM,CAAC,CAAC;AAC3D,CAAC,CAAC;;AAEF;AACAnB,MAAM,CAACoB,IAAI,CAAC,GAAG,EAAE,OAAOX,OAAO,EAAEC,QAAQ,KAAK;EAC1CA,QAAQ,CAACE,IAAI,CAAC,MAAMP,UAAU,CAACI,OAAO,CAACY,IAAI,CAACC,WAAW,CAAC,CAAC;AAC7D,CAAC,CAAC;;AAEF;AACAtB,MAAM,CAACuB,GAAG,CAAC,UAAU,EAAE,OAAOd,OAAO,EAAEC,QAAQ,KAAK;EAChD,IAAIY,WAAW,GAAG;IACdH,MAAM,EAAEV,OAAO,CAACQ,MAAM,CAACE,MAAM;IAC7BK,WAAW,EAAEf,OAAO,CAACY,IAAI,CAACI;EAC9B,CAAC;EAEDf,QAAQ,CAACE,IAAI,CAAC,MAAMN,UAAU,CAACgB,WAAW,CAAC,CAAC;AAChD,CAAC,CAAC;;AAEF;AACAtB,MAAM,CAAC0B,MAAM,CAAC,UAAU,EAAE,OAAOjB,OAAO,EAAEC,QAAQ,KAAK;EACnDA,QAAQ,CAACE,IAAI,CAAC,MAAML,UAAU,CAACE,OAAO,CAACQ,MAAM,CAACE,MAAM,CAAC,CAAC;AAC1D,CAAC,CAAC;;AAGF;AACAQ,MAAM,CAACC,OAAO,GAAG5B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}