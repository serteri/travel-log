{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\nvar _pluginSyntaxNumericSeparator = require(\"@babel/plugin-syntax-numeric-separator\");\nfunction remover({\n  node\n}) {\n  var _extra$raw;\n  const {\n    extra\n  } = node;\n  if (extra != null && (_extra$raw = extra.raw) != null && _extra$raw.includes(\"_\")) {\n    extra.raw = extra.raw.replace(/_/g, \"\");\n  }\n}\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  return {\n    name: \"transform-numeric-separator\",\n    inherits: _pluginSyntaxNumericSeparator.default,\n    visitor: {\n      NumericLiteral: remover,\n      BigIntLiteral: remover\n    }\n  };\n});\nexports.default = _default;","map":{"version":3,"names":["_helperPluginUtils","require","_pluginSyntaxNumericSeparator","remover","node","_extra$raw","extra","raw","includes","replace","_default","declare","api","assertVersion","name","inherits","default","visitor","NumericLiteral","BigIntLiteral","exports"],"sources":["/Users/serteriyigunlu/Desktop/travel-log-app/node_modules/@babel/plugin-transform-numeric-separator/src/index.ts"],"sourcesContent":["import { declare } from \"@babel/helper-plugin-utils\";\nimport syntaxNumericSeparator from \"@babel/plugin-syntax-numeric-separator\";\nimport type { NodePath } from \"@babel/traverse\";\nimport type * as t from \"@babel/types\";\n\n/**\n * Given a bigIntLiteral or NumericLiteral, remove numeric\n * separator `_` from its raw representation\n *\n * @param {NodePath<BigIntLiteral | NumericLiteral>} { node }: A Babel AST node path\n */\nfunction remover({ node }: NodePath<t.BigIntLiteral | t.NumericLiteral>) {\n  const { extra } = node;\n  // @ts-expect-error todo(flow->ts)\n  if (extra?.raw?.includes(\"_\")) {\n    // @ts-expect-error todo(flow->ts)\n    extra.raw = extra.raw.replace(/_/g, \"\");\n  }\n}\n\nexport default declare(api => {\n  api.assertVersion(7);\n\n  return {\n    name: \"transform-numeric-separator\",\n    inherits: syntaxNumericSeparator.default,\n\n    visitor: {\n      NumericLiteral: remover,\n      BigIntLiteral: remover,\n    },\n  };\n});\n"],"mappings":";;;;;;AAAA,IAAAA,kBAAA,GAAAC,OAAA;AACA,IAAAC,6BAAA,GAAAD,OAAA;AAUA,SAASE,OAAOA,CAAC;EAAEC;AAAmD,CAAC,EAAE;EAAA,IAAAC,UAAA;EACvE,MAAM;IAAEC;EAAM,CAAC,GAAGF,IAAI;EAEtB,IAAIE,KAAK,aAAAD,UAAA,GAALC,KAAK,CAAEC,GAAG,aAAVF,UAAA,CAAYG,QAAQ,CAAC,GAAG,CAAC,EAAE;IAE7BF,KAAK,CAACC,GAAG,GAAGD,KAAK,CAACC,GAAG,CAACE,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EACzC;AACF;AAAC,IAAAC,QAAA,GAEc,IAAAV,kBAAA,CAAAW,OAAO,EAACC,GAAG,IAAI;EAC5BA,GAAG,CAACC,aAAa,CAAC,CAAC,CAAC;EAEpB,OAAO;IACLC,IAAI,EAAE,6BAA6B;IACnCC,QAAQ,EAAEb,6BAAsB,CAACc,OAAO;IAExCC,OAAO,EAAE;MACPC,cAAc,EAAEf,OAAO;MACvBgB,aAAa,EAAEhB;IACjB;EACF,CAAC;AACH,CAAC,CAAC;AAAAiB,OAAA,CAAAJ,OAAA,GAAAN,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}